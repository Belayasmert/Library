/*
Title : MOVEBY.ulp
Purpose : Moves group by displacement.
Author : Cameron Nicks

License : Creative Commons Attribution-ShareAlike 4.0 International
        : CC BY-SA 4.0
        : https://creativecommons.org/licenses/by-sa/4.0/

*******************************************************************************
*				Copyright (c) 2017 Cameron Nicks                              *
*******************************************************************************
THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



Version:
0.81 06/01/17
	- Swapped out license block for Creative Commons.
	- Restructured revision and feature list.
	- Added context install routines from Rachael Peterson. Thanks :)
[X] - Store last used values as default. Use cfgset() and cfgget() to save and load from eagerc.usr

0.8 05/12/17
	- Basic operation. Enter values to move by.

To-Do Feature List:


[ ] - Add command line argument handling. Only open dialog if no arguments present. (RUN MOVEBY x y)
[ ] - Rotate option
[ ] - Repeat mode: Repeats the last move amounts without the dialog popping up.
[ ] - Get and display units, use list box to override.
[ ]? - Box to enter single components? Context menu? Absolute option for single element move to?

[ ]? - Handle MARK as the reference origin. Move distance from Mark. How would this handle groups? Single elements only? (where you want the offset should start from, would be handy in library creation from datasheet dimensions)
[ ]x - INPUT CHANGE: Increment mode. Numbers entered multiplied by the grid step. With a 0.1mm grid size, 5 entered as the move by value would move 0.5mm.
This could also be used combined with previosly used value and repeat mode to make move by step shortcuts on the arrow keys.

*/

#usage 	"en: Move group by x,y displacement. Define a group, enter values, enter.<p>"
		"Moves the group by the amounts entered in the currently set units"
		"run MOVEBY --install - Installs the utility to the board context menus.\n"
		"run MOVEBY --version - Shows the version number of the ULP being called.\n"
		"run MOVEBY --locate-ulp - Shows the location of the ULP being called (Useful for debug).\n"
		"<author>Author: Cameron.Nicks+Layout@gmail.com</author>"
		"<author>Author: cnicks@phaseivengr.com</author>"

// Input box Defaults

string xVal = cfgget("moveby.value.x", "0"); // Load last used value
string yVal = cfgget("moveby.value.y", "0");



string VERSION = "0.81.1 (01-Jun-2017)";

if (argv[1] == "--install") {
   exit("edit .brd; set context element 'Move By...' 'run MOVEBY';"); //'run MOVEBY --context' // TO-DO: Add schematic context: BUG Reported: https://goo.gl/vA6Mfq
}else if (argv[1] == "--version"){
   string tmp = "ULP Version: " + VERSION;
   dlgMessageBox(tmp);
   exit(0);
} else if (argv[1] == "--locate-ulp"){
   dlgMessageBox(argv[0]);
   exit(0);
} else {

   // Define variables

   string cmd="";
   int result;
   string tmp = "";


int Result = dlgDialog("Move By Displacement") {
  dlgHBoxLayout {
    dlgStretch(1);
    dlgLabel("Move Group By...");
    dlgStretch(1);
    }
  dlgHBoxLayout {
  dlgLabel("X:");
  dlgStringEdit(xVal);
  dlgLabel("Y:");
  dlgStringEdit(yVal);
  }
  dlgHBoxLayout {
   // dlgStretch(1);
    dlgPushButton("+OK")    dlgAccept();
    dlgPushButton("Cancel") dlgReject();
    }
	};

if (Result) {

// Save last used values to eaglerc.usr
// This doesn't actually save to the file until eagle closes, but it does hold the changes in memory.
cfgset("moveby.value.x", xVal);
cfgset("moveby.value.y", yVal);

sprintf(cmd, "MOVE (>0 0) (%s %s);\n", xVal, yVal);

exit(cmd);
}
}

